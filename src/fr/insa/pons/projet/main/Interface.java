/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fr.insa.pons.projet.main;

import fr.insa.pons.projet.circuit.Circuit;
import fr.insa.pons.projet.composant.Condensateur;
import fr.insa.pons.projet.composant.Fil;
import fr.insa.pons.projet.composant.GenerateurTension;
import fr.insa.pons.projet.composant.Inductance;
import fr.insa.pons.projet.composant.Resistance;
import fr.insa.pons.projet.noeud.Noeuds;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author hugop
 */
public class Interface extends javax.swing.JFrame {

    private Circuit CircuitCalculs;
    double pulse;

    /**
     * Creates new form Interface
     */
    public Interface() throws IOException {
        initComponents();
        CircuitCalculs = new Circuit();
        this.setIconImage(ImageIO.read((getClass().getResource("/fr/insa/pons/projet/main/images/icon.png"))));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel_Grand = new javax.swing.JPanel();
        jPanel_Composants = new javax.swing.JPanel();
        jPanelComposants = new javax.swing.JPanel();
        jButtonNoeud = new javax.swing.JButton();
        jButtonResistance = new javax.swing.JButton();
        jButtonCondensateur = new javax.swing.JButton();
        jButtonInductance = new javax.swing.JButton();
        jLabelIconNoeud = new javax.swing.JLabel();
        jLabelIconResistance = new javax.swing.JLabel();
        jLabelIconCondensateur = new javax.swing.JLabel();
        jLabelIconInductance = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabelIconGenerateur = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButtonSuppression = new javax.swing.JButton();
        jPanel_AffichageCalculs = new javax.swing.JPanel();
        jButtonCalculs = new javax.swing.JButton();
        jScrollPaneAffichageCalculs = new javax.swing.JScrollPane();
        jTextAreaAffichageCalculs = new javax.swing.JTextArea();
        jPanelAffichage1 = new fr.insa.pons.projet.main.JPanelAffichage();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CircuitRLC");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("framePrincipale"); // NOI18N
        setSize(new java.awt.Dimension(500, 500));

        jPanel_Composants.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel_Composants.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButtonNoeud.setText("Noeud");
        jButtonNoeud.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonNoeud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNoeudActionPerformed(evt);
            }
        });

        jButtonResistance.setText("Resistance");
        jButtonResistance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResistanceActionPerformed(evt);
            }
        });

        jButtonCondensateur.setText("Condensateur");
        jButtonCondensateur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCondensateurActionPerformed(evt);
            }
        });

        jButtonInductance.setText("Inductance");
        jButtonInductance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInductanceActionPerformed(evt);
            }
        });

        jLabelIconNoeud.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelIconNoeud.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fr/insa/pons/projet/main/images/noeud.png"))); // NOI18N

        jLabelIconResistance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelIconResistance.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fr/insa/pons/projet/main/images/resistance.png"))); // NOI18N

        jLabelIconCondensateur.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelIconCondensateur.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fr/insa/pons/projet/main/images/condensateur.png"))); // NOI18N

        jLabelIconInductance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelIconInductance.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fr/insa/pons/projet/main/images/inductance.png"))); // NOI18N

        javax.swing.GroupLayout jPanelComposantsLayout = new javax.swing.GroupLayout(jPanelComposants);
        jPanelComposants.setLayout(jPanelComposantsLayout);
        jPanelComposantsLayout.setHorizontalGroup(
            jPanelComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelComposantsLayout.createSequentialGroup()
                .addGroup(jPanelComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonInductance, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonNoeud, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonResistance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelComposantsLayout.createSequentialGroup()
                        .addComponent(jButtonCondensateur)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelIconResistance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelIconNoeud, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelIconCondensateur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelIconInductance, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelComposantsLayout.setVerticalGroup(
            jPanelComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelComposantsLayout.createSequentialGroup()
                .addGroup(jPanelComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNoeud, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelIconNoeud, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(jPanelComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonResistance, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelIconResistance, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanelComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIconCondensateur)
                    .addGroup(jPanelComposantsLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jButtonCondensateur, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIconInductance)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelComposantsLayout.createSequentialGroup()
                        .addComponent(jButtonInductance, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
        );

        jButton1.setText("Generateur Tension");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Fil");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabelIconGenerateur.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fr/insa/pons/projet/main/images/generateur.png"))); // NOI18N
        jLabelIconGenerateur.setText("jLabel1");
        jLabelIconGenerateur.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabelIconGenerateur.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fr/insa/pons/projet/main/images/fil.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        jButtonSuppression.setText("Suppression");
        jButtonSuppression.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSuppressionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_ComposantsLayout = new javax.swing.GroupLayout(jPanel_Composants);
        jPanel_Composants.setLayout(jPanel_ComposantsLayout);
        jPanel_ComposantsLayout.setHorizontalGroup(
            jPanel_ComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ComposantsLayout.createSequentialGroup()
                .addGroup(jPanel_ComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_ComposantsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel_ComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelComposants, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel_ComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_ComposantsLayout.createSequentialGroup()
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                .addGroup(jPanel_ComposantsLayout.createSequentialGroup()
                                    .addComponent(jButton1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelIconGenerateur, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel_ComposantsLayout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jButtonSuppression)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_ComposantsLayout.setVerticalGroup(
            jPanel_ComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ComposantsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelComposants, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_ComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIconGenerateur, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel_ComposantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSuppression)
                .addGap(25, 25, 25))
        );

        jPanel_AffichageCalculs.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jButtonCalculs.setText("Calculer");
        jButtonCalculs.setToolTipText("Met à jour les calculs ");
        jButtonCalculs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalculsActionPerformed(evt);
            }
        });

        jTextAreaAffichageCalculs.setEditable(false);
        jTextAreaAffichageCalculs.setColumns(20);
        jTextAreaAffichageCalculs.setRows(5);
        jScrollPaneAffichageCalculs.setViewportView(jTextAreaAffichageCalculs);

        javax.swing.GroupLayout jPanel_AffichageCalculsLayout = new javax.swing.GroupLayout(jPanel_AffichageCalculs);
        jPanel_AffichageCalculs.setLayout(jPanel_AffichageCalculsLayout);
        jPanel_AffichageCalculsLayout.setHorizontalGroup(
            jPanel_AffichageCalculsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_AffichageCalculsLayout.createSequentialGroup()
                .addComponent(jScrollPaneAffichageCalculs, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel_AffichageCalculsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCalculs, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_AffichageCalculsLayout.setVerticalGroup(
            jPanel_AffichageCalculsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_AffichageCalculsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonCalculs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneAffichageCalculs)
                .addContainerGap())
        );

        jPanelAffichage1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelAffichage1.setPreferredSize(new java.awt.Dimension(504, 500));
        jPanelAffichage1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelAffichage1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAffichage1Layout = new javax.swing.GroupLayout(jPanelAffichage1);
        jPanelAffichage1.setLayout(jPanelAffichage1Layout);
        jPanelAffichage1Layout.setHorizontalGroup(
            jPanelAffichage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelAffichage1Layout.setVerticalGroup(
            jPanelAffichage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel_GrandLayout = new javax.swing.GroupLayout(jPanel_Grand);
        jPanel_Grand.setLayout(jPanel_GrandLayout);
        jPanel_GrandLayout.setHorizontalGroup(
            jPanel_GrandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_GrandLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel_GrandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_AffichageCalculs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelAffichage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel_Composants, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel_GrandLayout.setVerticalGroup(
            jPanel_GrandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_GrandLayout.createSequentialGroup()
                .addComponent(jPanelAffichage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_AffichageCalculs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
            .addGroup(jPanel_GrandLayout.createSequentialGroup()
                .addComponent(jPanel_Composants, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("Fichier");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Autres");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Crédits");
        jMenuItem2.setToolTipText("");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel_Grand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel_Grand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCalculsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalculsActionPerformed
        jPanelEntrerPulse jp = new jPanelEntrerPulse();
        int rep = JOptionPane.showConfirmDialog(this, jp, "Pulsation", JOptionPane.OK_CANCEL_OPTION);
        try {
            if (rep == JOptionPane.OK_OPTION) {
                pulse = Double.parseDouble(jp.getjPulsation().getText());
                for (int i = 0; i < CircuitCalculs.getComposants().size(); i++) {
                    CircuitCalculs.getComposants().get(i).setOmega(pulse);
                }
                jTextAreaAffichageCalculs.setText("Solution =\n" + CircuitCalculs.resolutionProbleme());
            } else {
                JOptionPane.showMessageDialog(this, "Vous avez annulé !");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "La pulsation est un REEL !");
        }

    }//GEN-LAST:event_jButtonCalculsActionPerformed


    private void jButtonNoeudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNoeudActionPerformed
        EntrerNoeud EntrerNoeud = new EntrerNoeud(); //initiation du jPanel
        jPanelAffichage1.Compo = 1;
        int rep = JOptionPane.showConfirmDialog(this, EntrerNoeud, "Saisie du Noeud", JOptionPane.OK_CANCEL_OPTION);
        if (rep == JOptionPane.OK_OPTION) {
            if (CircuitCalculs.getNoeuds().isEmpty()) {
                CircuitCalculs.getNoeuds().add(new Noeuds(0));
                System.out.println(CircuitCalculs);
            } else {
                CircuitCalculs.getNoeuds().add(new Noeuds(CircuitCalculs.getNoeuds().get(CircuitCalculs.getNoeuds().size() - 1).getId() + 1));
                System.out.println(CircuitCalculs);
            }
        }

    }//GEN-LAST:event_jButtonNoeudActionPerformed

    private void jButtonResistanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResistanceActionPerformed
        jPanelEntrerResistance entrerRes = new jPanelEntrerResistance();
        for (int i = 0; i < CircuitCalculs.getNoeuds().size(); i++) {
            entrerRes.getjComboBoxDepart().addItem("" + CircuitCalculs.getNoeuds().get(i).getId());
            entrerRes.getjComboBoxArrive().addItem("" + CircuitCalculs.getNoeuds().get(i).getId());
        }

        int rep = JOptionPane.showConfirmDialog(this, entrerRes, "Saisie de Résistance", JOptionPane.OK_CANCEL_OPTION);
        if (rep == JOptionPane.OK_OPTION) {
            if ((Integer.parseInt(entrerRes.getjComboBoxDepart().getSelectedItem().toString().trim())) == (Integer.parseInt(entrerRes.getjComboBoxArrive().getSelectedItem().toString().trim()))) {
                JOptionPane.showMessageDialog(this, "Erreur : Même noeud de départ et d'arrivée !");
                throw new Error();
            } else {
                try {
                    if (CircuitCalculs.getComposants().isEmpty()) {

                        //On set les Coordonnées des Noeuds de Départ et Arrivée d'après les coordonnées stockées dans le Circuit d'affichage
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordx());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordy());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxArrive().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxArrive().getSelectedItem().toString().trim())).getId()).getCoordx());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxArrive().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxArrive().getSelectedItem().toString().trim())).getId()).getCoordy());
                        //On créer une nouvelle résistance, avec comme attributs la résistance tapée, et un ID de 0 si c'est la première, puis on l'ajoute au circuit avec ses bons noeuds

                        Resistance res = new Resistance(Double.parseDouble(entrerRes.getjTextFieldResistance().getText()), 0);
                        System.out.println("CIRCUIT AVANT AJOUTE :" + CircuitCalculs);
                        CircuitCalculs.getComposants().add(res);
                        jPanelAffichage1.getCircuitAff().ajouteComposant(res, CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxDepart().getSelectedItem().toString().trim())), CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxArrive().getSelectedItem().toString().trim())));

                    } else {

                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordx());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordy());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxArrive().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxArrive().getSelectedItem().toString().trim())).getId()).getCoordx());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxArrive().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxArrive().getSelectedItem().toString().trim())).getId()).getCoordy());
                        Resistance res = new Resistance(Double.parseDouble(entrerRes.getjTextFieldResistance().getText()), CircuitCalculs.getComposants().get(CircuitCalculs.getComposants().size() - 1).getId() + 1);

                        CircuitCalculs.getComposants().add(res);
                        jPanelAffichage1.getCircuitAff().ajouteComposant(res, CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxDepart().getSelectedItem().toString().trim())), CircuitCalculs.chercheNoeud(Integer.parseInt(entrerRes.getjComboBoxArrive().getSelectedItem().toString().trim())));
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "VEUILLEZ ENTRER DES NOMBRES !");
                }

            }
            System.out.println(CircuitCalculs);
        } else {
            JOptionPane.showMessageDialog(this, "Saisie annulée");
        }
        repaint();
    }//GEN-LAST:event_jButtonResistanceActionPerformed

    private void jButtonCondensateurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCondensateurActionPerformed
        jPanelEntrerCondensateur entrerC = new jPanelEntrerCondensateur();
        for (int i = 0; i < CircuitCalculs.getNoeuds().size(); i++) {
            entrerC.getjComboBoxDepart().addItem("" + CircuitCalculs.getNoeuds().get(i).getId());
            entrerC.getjComboBoxArrivee().addItem("" + CircuitCalculs.getNoeuds().get(i).getId());
        }
        int rep = JOptionPane.showConfirmDialog(this, entrerC, "Saisie de Condensateur", JOptionPane.OK_CANCEL_OPTION);
        if (rep == JOptionPane.OK_OPTION) {
            if ((Integer.parseInt(entrerC.getjComboBoxDepart().getSelectedItem().toString().trim())) == (Integer.parseInt(entrerC.getjComboBoxArrivee().getSelectedItem().toString().trim()))) {
                JOptionPane.showMessageDialog(this, "Erreur : Même noeud de départ et d'arrivée !");
                throw new Error();
            } else {
                try {
                    if (CircuitCalculs.getComposants().isEmpty()) {
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordx());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordy());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxArrivee().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxArrivee().getSelectedItem().toString().trim())).getId()).getCoordx());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxArrivee().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxArrivee().getSelectedItem().toString().trim())).getId()).getCoordy());

                        Condensateur C = new Condensateur(Double.parseDouble(entrerC.getjTextFieldCapacite().getText()), 0);
                        CircuitCalculs.getComposants().add(C);
                        jPanelAffichage1.getCircuitAff().ajouteComposant(C, CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxDepart().getSelectedItem().toString().trim())), CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxArrivee().getSelectedItem().toString().trim())));

                    } else {
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordx());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordy());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxArrivee().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxArrivee().getSelectedItem().toString().trim())).getId()).getCoordx());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxArrivee().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxArrivee().getSelectedItem().toString().trim())).getId()).getCoordy());
                        Condensateur C = new Condensateur(Double.parseDouble(entrerC.getjTextFieldCapacite().getText()), CircuitCalculs.getComposants().get(CircuitCalculs.getComposants().size() - 1).getId() + 1);
                        CircuitCalculs.getComposants().add(C);
                        jPanelAffichage1.getCircuitAff().ajouteComposant(C, CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxDepart().getSelectedItem().toString().trim())), CircuitCalculs.chercheNoeud(Integer.parseInt(entrerC.getjComboBoxArrivee().getSelectedItem().toString().trim())));
                        System.out.println(CircuitCalculs);
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "VEUILLEZ ENTRER DES NOMBRES !");
                }

            }
            System.out.println(CircuitCalculs);
        } else {
            JOptionPane.showMessageDialog(this, "Saisie annulée");
        } // TODO add your handling code here:
        repaint();
    }//GEN-LAST:event_jButtonCondensateurActionPerformed

    private void jButtonInductanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInductanceActionPerformed

        jPanelEntrerInductance entrerI = new jPanelEntrerInductance();
        for (int i = 0; i < CircuitCalculs.getNoeuds().size(); i++) {
            entrerI.getjComboBoxDepart().addItem("" + CircuitCalculs.getNoeuds().get(i).getId());
            entrerI.getjComboBoxArrivee().addItem("" + CircuitCalculs.getNoeuds().get(i).getId());
        }
        int rep = JOptionPane.showConfirmDialog(this, entrerI, "Saisie de l'Inductance", JOptionPane.OK_CANCEL_OPTION);
        if (rep == JOptionPane.OK_OPTION) {
            if ((Integer.parseInt(entrerI.getjComboBoxDepart().getSelectedItem().toString().trim())) == (Integer.parseInt(entrerI.getjComboBoxArrivee().getSelectedItem().toString().trim()))) {
                JOptionPane.showMessageDialog(this, "Erreur : Même noeud de départ et d'arrivée !");
                throw new Error();
            } else {
                try {
                    if (CircuitCalculs.getComposants().isEmpty()) {
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordx());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordy());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxArrivee().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxArrivee().getSelectedItem().toString().trim())).getId()).getCoordx());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxArrivee().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxArrivee().getSelectedItem().toString().trim())).getId()).getCoordy());

                        Inductance L = new Inductance(Double.parseDouble(entrerI.getjTextFieldInductance().getText()), 0);
                        CircuitCalculs.getComposants().add(L);
                        jPanelAffichage1.getCircuitAff().ajouteComposant(L, CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxDepart().getSelectedItem().toString().trim())), CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxArrivee().getSelectedItem().toString().trim())));

                    } else {
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordx());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordy());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxArrivee().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxArrivee().getSelectedItem().toString().trim())).getId()).getCoordx());
                        CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxArrivee().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxArrivee().getSelectedItem().toString().trim())).getId()).getCoordy());
                        Inductance L = new Inductance(Double.parseDouble(entrerI.getjTextFieldInductance().getText()), CircuitCalculs.getComposants().get(CircuitCalculs.getComposants().size() - 1).getId() + 1);
                        CircuitCalculs.getComposants().add(L);
                        jPanelAffichage1.getCircuitAff().ajouteComposant(L, CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxDepart().getSelectedItem().toString().trim())), CircuitCalculs.chercheNoeud(Integer.parseInt(entrerI.getjComboBoxArrivee().getSelectedItem().toString().trim())));
                        System.out.println(CircuitCalculs);
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "VEUILLEZ ENTRER DES NOMBRES !");
                }

            }
            System.out.println(CircuitCalculs);
        } else {
            JOptionPane.showMessageDialog(this, "Saisie annulée");
        }
        repaint();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonInductanceActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jPanelEntrerGenerateurTension gen = new jPanelEntrerGenerateurTension();
        for (int i = 0; i < CircuitCalculs.getNoeuds().size(); i++) {
            gen.getjComboBoxDepart().addItem("" + CircuitCalculs.getNoeuds().get(i).getId());
            gen.getjComboBoxArrive().addItem("" + CircuitCalculs.getNoeuds().get(i).getId());
        }
        if (CircuitCalculs.testGenerateur()) {
            JOptionPane.showMessageDialog(this, "Erreur : il ne peut y avoir qu'un seul générateur !");
            throw new Error();
        } else {
            int rep = JOptionPane.showConfirmDialog(this, gen, "Saisie du gen", JOptionPane.OK_CANCEL_OPTION);
            if (rep == JOptionPane.OK_OPTION) {
                if ((Integer.parseInt(gen.getjComboBoxDepart().getSelectedItem().toString().trim())) == (Integer.parseInt(gen.getjComboBoxArrive().getSelectedItem().toString().trim()))) {
                    JOptionPane.showMessageDialog(this, "Erreur : Même noeud de départ et d'arrivée !");
                    throw new Error();
                } else {
                    try {
                        if (CircuitCalculs.getComposants().isEmpty()) {
                            CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordx());
                            CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordy());
                            CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxArrive().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxArrive().getSelectedItem().toString().trim())).getId()).getCoordx());
                            CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxArrive().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxArrive().getSelectedItem().toString().trim())).getId()).getCoordy());

                            GenerateurTension G = new GenerateurTension(Double.parseDouble(gen.getjTextFieldFem().getText()), 0);
                            CircuitCalculs.getComposants().add(G);
                            jPanelAffichage1.getCircuitAff().ajouteComposant(G, CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxDepart().getSelectedItem().toString().trim())), CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxArrive().getSelectedItem().toString().trim())));

                        } else {
                            CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordx());
                            CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordy());
                            CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxArrive().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxArrive().getSelectedItem().toString().trim())).getId()).getCoordy());
                            GenerateurTension G = new GenerateurTension(Double.parseDouble(gen.getjTextFieldFem().getText()), CircuitCalculs.getComposants().get(CircuitCalculs.getComposants().size() - 1).getId() + 1);
                            CircuitCalculs.getComposants().add(G);
                            jPanelAffichage1.getCircuitAff().ajouteComposant(G, CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxDepart().getSelectedItem().toString().trim())), CircuitCalculs.chercheNoeud(Integer.parseInt(gen.getjComboBoxArrive().getSelectedItem().toString().trim())));
                        }
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "VEUILLEZ ENTRER DES NOMBRES !");
                    }

                }
                System.out.println(CircuitCalculs);
                System.out.println("Circuit AFFICHAGE :" + jPanelAffichage1.getCircuitAff());
            } else {
                JOptionPane.showMessageDialog(this, "Saisie annulée");
            }
            repaint();
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPanelAffichage1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelAffichage1MousePressed
        repaint();       // TODO add your handling code here:
    }//GEN-LAST:event_jPanelAffichage1MousePressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jPanelEntrerFil fil = new jPanelEntrerFil();
        for (int i = 0; i < CircuitCalculs.getNoeuds().size(); i++) {
            fil.getjComboBoxDepart().addItem("" + CircuitCalculs.getNoeuds().get(i).getId());
            fil.getjComboBoxArrivee().addItem("" + CircuitCalculs.getNoeuds().get(i).getId());
        }
        int rep = JOptionPane.showConfirmDialog(this, fil, "Saisie d'un Fil", JOptionPane.OK_CANCEL_OPTION);
        if (rep == JOptionPane.OK_OPTION) {
            if ((Integer.parseInt(fil.getjComboBoxDepart().getSelectedItem().toString().trim())) == (Integer.parseInt(fil.getjComboBoxArrivee().getSelectedItem().toString().trim()))) {
                JOptionPane.showMessageDialog(this, "Erreur : Même noeud de départ et d'arrivée !");
                throw new Error();
            } else {
                if (CircuitCalculs.getComposants().isEmpty()) {
                    CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordx());
                    CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordy());
                    CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxArrivee().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxArrivee().getSelectedItem().toString().trim())).getId()).getCoordx());
                    CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxArrivee().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxArrivee().getSelectedItem().toString().trim())).getId()).getCoordy());
                    Fil f = new Fil(0);
                    CircuitCalculs.getComposants().add(f);
                    jPanelAffichage1.getCircuitAff().ajouteComposant(f, CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxDepart().getSelectedItem().toString().trim())), CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxArrivee().getSelectedItem().toString().trim())));

                } else {
                    CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordx());
                    CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxDepart().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxDepart().getSelectedItem().toString().trim())).getId()).getCoordy());
                    CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxArrivee().getSelectedItem().toString().trim())).setCoordx(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxArrivee().getSelectedItem().toString().trim())).getId()).getCoordx());
                    CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxArrivee().getSelectedItem().toString().trim())).setCoordy(jPanelAffichage1.getCircuitAff().getNoeuds().get(CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxArrivee().getSelectedItem().toString().trim())).getId()).getCoordy());
                    Fil f = new Fil(CircuitCalculs.getComposants().get(CircuitCalculs.getComposants().size() - 1).getId() + 1);
                    CircuitCalculs.getComposants().add(f);
                    jPanelAffichage1.getCircuitAff().ajouteComposant(f, CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxDepart().getSelectedItem().toString().trim())), CircuitCalculs.chercheNoeud(Integer.parseInt(fil.getjComboBoxArrivee().getSelectedItem().toString().trim())));
                    System.out.println(CircuitCalculs);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "saisie annulée.");
        }
        repaint();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonSuppressionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSuppressionActionPerformed
        jPanelSuppression supr = new jPanelSuppression();
        for (int i = 0; i < CircuitCalculs.getComposants().size(); i++) {
            supr.getjComboBoxCompo().addItem("" + CircuitCalculs.getComposants().get(i).getId());
        }
        int rep = JOptionPane.showConfirmDialog(this, supr, "Suppression", JOptionPane.OK_CANCEL_OPTION);
        if (rep == JOptionPane.OK_OPTION) {
            int id = Integer.parseInt(supr.getjComboBoxCompo().getSelectedItem().toString().trim());
            CircuitCalculs.chercheNoeud(CircuitCalculs.getComposants().get(id).getNoeudDepart().getId()).RemoveCompoD(id);
            CircuitCalculs.chercheNoeud(CircuitCalculs.getComposants().get(id).getNoeudArrive().getId()).RemoveCompoA(id);
            CircuitCalculs.getComposants().remove(id);
            jPanelAffichage1.getCircuitAff().getComposants().remove(id);
            for (int i = id; i < CircuitCalculs.getComposants().size(); i++) {
                CircuitCalculs.getComposants().get(i).setId(i);
                jPanelAffichage1.getCircuitAff().getComposants().get(i).setId(i);
            }
            repaint();
        }

// TODO add your handling code here:
    }//GEN-LAST:event_jButtonSuppressionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Interface GUI;
                try {
                    GUI = new Interface();
                    GUI.pack();
                    GUI.setVisible(true);
                } catch (IOException e) {

                }

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonCalculs;
    private javax.swing.JButton jButtonCondensateur;
    private javax.swing.JButton jButtonInductance;
    private javax.swing.JButton jButtonNoeud;
    private javax.swing.JButton jButtonResistance;
    private javax.swing.JButton jButtonSuppression;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelIconCondensateur;
    private javax.swing.JLabel jLabelIconGenerateur;
    private javax.swing.JLabel jLabelIconInductance;
    private javax.swing.JLabel jLabelIconNoeud;
    private javax.swing.JLabel jLabelIconResistance;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private fr.insa.pons.projet.main.JPanelAffichage jPanelAffichage1;
    private javax.swing.JPanel jPanelComposants;
    private javax.swing.JPanel jPanel_AffichageCalculs;
    private javax.swing.JPanel jPanel_Composants;
    private javax.swing.JPanel jPanel_Grand;
    private javax.swing.JScrollPane jScrollPaneAffichageCalculs;
    private javax.swing.JTextArea jTextAreaAffichageCalculs;
    // End of variables declaration//GEN-END:variables
}
